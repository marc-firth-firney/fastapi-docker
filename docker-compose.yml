version: "3.7"

services:
  tenant-api:
    container_name: tenant-api
    hostname: tenant-api
    build:
      context: ./
      target: tenant-api
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./src/app:/usr/src/app
      # - ./storage:/mnt/fastapi-docker/storage
      - ./src/entrypoint.sh:/usr/src/entrypoint.sh
      - ./src/behave.ini:/root/behave.ini
    env_file:
      - ./src/app/.env
    environment:
      - PYTHONPATH=/usr/src
    ports:
      - 8000
      - 8001

  nginx:
    hostname: nginx
    container_name: nginx
    build:
      context: ./
      target: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    depends_on:
      - tenant-api
      - click-fulfilment

  typesense:
    hostname: typesense
    container_name: typesense
    image: firneygroup/typesense:27.1
    restart: on-failure
    ports:
      - "8108:8108"
    volumes:
      - ./typesense/data:/data
    command:
      "\
      --data-dir /data \
      --api-key=xyz \
      --enable-cors \
      "
      # --enable-search-analytics=true \
      # --analytics-dir=/path/to/analytics-data \
      # --analytics-flush-interval=60\

  # redis-cache:
  #   hostname: redis-cache
  #   container_name: redis-cache
  #   image: redis:5-alpine
  #   expose:
  #     - 6379
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "nc", "-z", "localhost", "6379"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5
  #   volumes:
  #     - "./db/redis/redis.conf:/usr/local/etc/redis/redis.conf"

  # postgres-db:
  #   hostname: postgres-db
  #   container_name: postgres-db
  #   image: postgres:14-alpine
  #   env_file:
  #     - ./db/postgres/db.env
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "nc", "-z", "localhost", "5432"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5
  #   volumes:
  #     - ./db/postgres/data:/var/lib/postgresql/data
  #     - ./db/postgres/files:/mnt/db/
  #     - ./db/postgres/init.dev.sql:/docker-entrypoint-initdb.d/init.dev.sql
